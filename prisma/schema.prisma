generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  email         String  @unique
  emailVerified Boolean @default(false)
  password      String
  firstName     String
  lastName      String

  Hotel            Hotel[]
  UserVerification UserVerification[] // one to many relationship - A user may have multiple verification tokens
  Booking          Booking[]
  PasswordReset    PasswordReset[] // one to many relationship - A user may have multiple password reset tokens
}

model UserVerification {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  verificationToken String
  expiresAt         DateTime
  user              User     @relation(fields: [userId], references: [id])
  userId            String   @db.ObjectId
}

model PasswordReset {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

model Hotel {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String   @unique
  description   String
  type          String
  country       String
  city          String
  facilities    String[]
  pricePerNight Float
  numAdults     Int
  numChildren   Int
  starRating    Int
  imageURLs     String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  userId   String    @db.ObjectId
  bookings Booking[]
}

model Booking {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  email       String
  checkIn     DateTime
  checkOut    DateTime
  numAdults   Int
  numChildren Int
  totalPrice  Float
  createdAt   DateTime @default(now())

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId

  hotelId String @db.ObjectId
  Hotel   Hotel  @relation(fields: [hotelId], references: [id])
}
